// autogenerated from gen/RISCV.rules: do not edit!
// generated with: cd gen; go run *.go

package ssa

import "math"

var _ = math.MinInt8 // in case not otherwise used
func rewriteValueRISCV(v *Value, config *Config) bool {
	switch v.Op {
	case OpAdd64:
		return rewriteValueRISCV_OpAdd64(v, config)
	case OpNilCheck:
		return rewriteValueRISCV_OpNilCheck(v, config)
	}
	return false
}
func rewriteValueRISCV_OpAdd64(v *Value, config *Config) bool {
	b := v.Block
	_ = b
	// match: (Add64 x y)
	// cond:
	// result: (ADD x y)
	for {
		x := v.Args[0]
		y := v.Args[1]
		v.reset(OpRISCVADD)
		v.AddArg(x)
		v.AddArg(y)
		return true
	}
	return false
}
func rewriteValueRISCV_OpNilCheck(v *Value, config *Config) bool {
	b := v.Block
	_ = b
	// match: (NilCheck ptr mem)
	// cond:
	// result: (ADD ptr mem)
	for {
		ptr := v.Args[0]
		mem := v.Args[1]
		v.reset(OpRISCVADD)
		v.AddArg(ptr)
		v.AddArg(mem)
		return true
	}
	return false
}
func rewriteBlockRISCV(b *Block) bool {
	switch b.Kind {
	}
	return false
}
